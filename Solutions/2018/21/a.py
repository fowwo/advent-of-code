# August 1st, 2022

# Registers: a, b, c, d, e, i

# Opcode to Pseudocode
# seti 123 0 4         ->    set 123 - e         ->    e = 123
# bani 4 456 4         ->    ban e 456 e         ->    e &= 456
# eqri 4 72 4          ->    eq e 72 e           ->    e = 1 if e == 72 else 0
# addr 4 5 5           ->    add e i i           ->    i += e
# seti 0 0 5           ->    set 0 - i           ->    i = 0
# seti 0 8 4           ->    set 0 - e           ->    e = 0
# bori 4 65536 3       ->    bor e 65536 d       ->    d = e | 65536
# seti 14464005 5 4    ->    set 14464005 - e    ->    e = 14464005
# bani 3 255 2         ->    ban d 255 c         ->    c = d & 255
# addr 4 2 4           ->    add e c e           ->    e += c
# bani 4 16777215 4    ->    ban e 16777215 e    ->    e &= 16777215
# muli 4 65899 4       ->    mul e 65899 e       ->    e *= 65899
# bani 4 16777215 4    ->    ban e 16777215 e    ->    e &= 16777215
# gtir 256 3 2         ->    gt 256 d c          ->    c = 1 if 256 > d else 0
# addr 2 5 5           ->    add c i i           ->    i += c
# addi 5 1 5           ->    add i 1 i           ->    i += 1
# seti 27 7 5          ->    set 27 - i          ->    i = 27
# seti 0 3 2           ->    set 0 - c           ->    c = 0
# addi 2 1 1           ->    add c 1 b           ->    b = c + 1
# muli 1 256 1         ->    mul b 256 b         ->    b *= 256
# gtrr 1 3 1           ->    gt b d b            ->    b = 1 if b > d else 0
# addr 1 5 5           ->    add b i i           ->    i += b
# addi 5 1 5           ->    add i 1 i           ->    i += 1
# seti 25 2 5          ->    set 25 - i          ->    i = 25
# addi 2 1 2           ->    add c 1 c           ->    c += 1
# seti 17 9 5          ->    set 17 - i          ->    i = 17
# setr 2 2 3           ->    set c - d           ->    d = c
# seti 7 3 5           ->    set 7 - i           ->    i = 7
# eqrr 4 0 2           ->    eq e a c            ->    c = 1 if e == a else 0
# addr 2 5 5           ->    add c i i           ->    i += c
# seti 5 9 5           ->    set 5 - i           ->    i = 5

# Jumps Visualized
#   00   e = 123
#   01   e &= 456 <---------------+
#   02   e = 1 if e == 72 else 0  |
#   03   i += e ---->             |
#   04   i = 0 -------------------+
#   05   e = 0
#   06   d = e | 65536 <----------------------+
#   07   e = 14464005                         |
#   08   c = d & 255 <----------------+       |
#   09   e += c                       |       |
#   10   e &= 16777215                |       |
#   11   e *= 65899                   |       |
#   12   e &= 16777215                |       |
#   13   c = 1 if 256 > d else 0      |       |
#   14   i += c ---->                 |       |
#   15   i += 1 ------+               |       |
#   16   i = 27 ------+---------------+---+   |
#   17   c = 0 <------+               |   |   |
#   18   b = c + 1 <--------------+   |   |   |
#   19   b *= 256                 |   |   |   |
#   20   b = 1 if b > d else 0    |   |   |   |
#   21   i += b ---->             |   |   |   |
#   22   i += 1 ------+           |   |   |   |
#   23   i = 25 ------+---+       |   |   |   |
#   24   c += 1 <-----+   |       |   |   |   |
#   25   i = 17 ----------+-------+   |   |   |
#   26   d = c <----------+           |   |   |
#   27   i = 7 -----------------------+   |   |
#   28   c = 1 if e == a else 0 <---------+   |
#   29   i += c ---->                         |
#   30   i = 5 -------------------------------+

# Simplified (1/5, Replace i where possible)
#   00   e = 123
#   01   e &= 456 <---------------+
#   02   e = 1 if e == 72 else 0  |
#   03   i += e ---->             |
#   04   jump --------------------+
#   05   e = 0
#   06   d = e | 65536 <----------------------+
#   07   e = 14464005                         |
#   08   c = d & 255 <----------------+       |
#   09   e += c                       |       |
#   10   e &= 16777215                |       |
#   11   e *= 65899                   |       |
#   12   e &= 16777215                |       |
#   13   c = 1 if 256 > d else 0      |       |
#   14   i += c ---->                 |       |
#   15   jump --------+               |       |
#   16   jump --------+---------------+---+   |
#   17   c = 0 <------+               |   |   |
#   18   b = c + 1 <--------------+   |   |   |
#   19   b *= 256                 |   |   |   |
#   20   b = 1 if b > d else 0    |   |   |   |
#   21   i += b ---->             |   |   |   |
#   22   jump --------+           |   |   |   |
#   23   jump --------+---+       |   |   |   |
#   24   c += 1 <-----+   |       |   |   |   |
#   25   jump ------------+-------+   |   |   |
#   26   d = c <----------+           |   |   |
#   27   jump ------------------------+   |   |
#   28   c = 1 if e == a else 0 <---------+   |
#   29   i += c ---->                         |
#   30   jump --------------------------------+

# Simplified (2/5, If statements)
#   00   e = 123
#   01   e &= 456 <---------------+
#   04   jump if e != 72 ---------+
#   05   e = 0
#   06   d = e | 65536 <----------------------+
#   07   e = 14464005                         |
#   08   c = d & 255 <----------------+       |
#   09   e += c                       |       |
#   10   e &= 16777215                |       |
#   11   e *= 65899                   |       |
#   12   e &= 16777215                |       |
#   13   jump if 256 > d -----+       |       |
#   15   jump --------+       v       |       |
#   16   jump --------+---------------+---+   |
#   17   c = 0 <------+               |   |   |
#   18   b = c + 1 <--------------+   |   |   |
#   19   b *= 256                 |   |   |   |
#   20   jump if b > d ---+       |   |   |   |
#   22   jump --------+   v       |   |   |   |
#   23   jump --------+---+       |   |   |   |
#   24   c += 1 <-----+   |       |   |   |   |
#   25   jump ------------+-------+   |   |   |
#   26   d = c <----------+           |   |   |
#   27   jump ------------------------+   |   |
#   28   exit if e == a <-----------------+   |
#   30   jump --------------------------------+

# Simplified (3/5, Reduce jumps)
#   00   e = 123
#   01   e &= 456 <---------------+
#   04   jump if e != 72 ---------+
#   05   e = 0
#   06   d = e | 65536 <----------------------+
#   07   e = 14464005                         |
#   08   c = d & 255 <----------------+       |
#   09   e += c                       |       |
#   10   e &= 16777215                |       |
#   11   e *= 65899                   |       |
#   12   e &= 16777215                |       |
#   13   jump if 256 > d -------------+---+   |
#   17   c = 0                        |   |   |
#   18   b = c + 1 <--------------+   |   |   |
#   19   b *= 256                 |   |   |   |
#   20   jump if b > d ---+       |   |   |   |
#   24   c += 1           |       |   |   |   |
#   25   jump ------------+-------+   |   |   |
#   26   d = c <----------+           |   |   |
#   27   jump ------------------------+   |   |
#   28   exit if e == a <-----------------+   |
#   30   jump --------------------------------+

# Simplified (4/5, Remove b)
#   00   e = 123
#   01   e &= 456 <---------------+
#   04   jump if e != 72 ---------+
#   05   e = 0
#   06   d = e | 65536 <----------------------------------+
#   07   e = 14464005                                     |
#   08   c = d & 255 <----------------------------+       |
#   09   e += c                                   |       |
#   10   e &= 16777215                            |       |
#   11   e *= 65899                               |       |
#   12   e &= 16777215                            |       |
#   13   jump if 256 > d -------------------------+---+   |
#   17   c = 0                                    |   |   |
#   20   jump if (c + 1) * 256 > d ---+ <-----+   |   |   |
#   24   c += 1                       |       |   |   |   |
#   25   jump ------------------------+-------+   |   |   |
#   26   d = c <----------------------+           |   |   |
#   27   jump ------------------------------------+   |   |
#   28   exit if e == a <-----------------------------+   |
#   30   jump --------------------------------------------+

# Simplified (5/5, Remove c)
#   00   e = 123
#   01   e &= 456 <---------------+
#   04   jump if e != 72 ---------+
#   05   e = 0
#   06   d = e | 65536 <--------------+
#   07   e = 14464005                 |
#   09   e += d & 255 <-------+       |
#   10   e &= 16777215        |       |
#   11   e *= 65899           |       |
#   12   e &= 16777215        |       |
#   13   jump if 256 > d -----+---+   |
#   26   d //= 256            |   |   |
#   27   jump ----------------+   |   |
#   28   exit if e == a <---------+   |
#   30   jump ------------------------+

# Python
e = 0
while True:
	d = e | 65536
	e = 14464005
	while True:
		e += d & 255
		e &= 16777215
		e *= 65899
		e &= 16777215
		if d < 256:
			break
		d //= 256
	# if e == a:
	# 	break

	# Since 'a' does not change during execution,
	# we can set 'a' to whatever 'e' is the first time this line is reached.
	print(e)
	break
